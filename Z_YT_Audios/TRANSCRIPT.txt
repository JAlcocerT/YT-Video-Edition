And you just need to be aware, yeah, on how to call it, client.chat.completions.create. And you have the system part, the user prompt, so, yeah, you can tweak it and see how it works to, yeah, to be our Streamlit Python Assistant, right? Here it is, really concise to the point, and, yeah, I'm sure this application works. So, yeah, and as mentioned, this is going to be the base ground for this repository that I will be explaining on future videos, right? We are just seeing the API calls, but there are a few more that we will cover, as well as GitHub actions and so on. But, yeah, to the point, let's see other use case of OpenAI API. Now we are going to do transcription, right? We are going to do text-to-audio, speech-to-text, right? They call it. So, simply, I have modified a little bit the code so that we just read from a TXT file instead of having input text hard-coded on the script. So given this transcription.txt, which I was using it from the audio of my Cloudflare video before, let's just tweak it a little bit so that it's not totally the same. Yeah, just write something. And then we are going to see how simple it is to generate that audio, right? And I'm sure that, well, the voice is quite familiar to you, is the one, yeah, that I'm using for all of these videos, right? So...

So yeah, let's just execute it, see how the audio is just created, an mp3 file that we are going to reproduce.

and now we're just going to execute the script and the mp3 file will be just generated right let's see how all this look with a second

and that's pretty much it for the second use case now last but not least we're gonna do mp3 to text so text to audio also with OpenAI API yeah also nothing complicated just put the path audio file and where do you want the output to be right and this is it let's execute the script in a second and here we go that's everything I wanted to show you for now you have the repository with all the scripts in the description and thank you for watching stay tuned for more and see you soon